// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component clear should display clear button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "#2089dc",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          clear
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component clear should display disabled clear button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          clear
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component clear should display raised clear button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "#2089dc",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          clear
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component lg should display disabled lg button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "hsl(208, 8%, 90%)",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 12,
            "paddingHorizontal": 14,
          }
        }
      >
        <Text
          style={
            {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          lg
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component lg should display lg button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 12,
            "paddingHorizontal": 14,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          lg
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component lg should display raised lg button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        {
          "backgroundColor": "#fff",
          "overflow": "visible",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        },
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 12,
            "paddingHorizontal": 14,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          lg
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component md should display disabled md button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "hsl(208, 8%, 90%)",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          md
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component md should display md button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          md
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component md should display raised md button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        {
          "backgroundColor": "#fff",
          "overflow": "visible",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        },
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          md
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component outline should display disabled outline button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "hsl(208, 8%, 63%)",
            "borderRadius": 2,
            "borderWidth": 0.5,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          outline
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component outline should display outline button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0.5,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "#2089dc",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          outline
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component outline should display raised outline button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        {
          "backgroundColor": "#fff",
          "overflow": "visible",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        },
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0.5,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "#2089dc",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          outline
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component sm should display disabled sm button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "hsl(208, 8%, 90%)",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 4,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          style={
            {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          sm
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component sm should display raised sm button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        {
          "backgroundColor": "#fff",
          "overflow": "visible",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        },
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 4,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          sm
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component sm should display sm button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 4,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          sm
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component solid should display disabled solid button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "hsl(208, 8%, 90%)",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          solid
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component solid should display raised solid button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        {
          "backgroundColor": "#fff",
          "overflow": "visible",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        },
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          solid
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Button Component solid should display solid button 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        undefined,
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 2,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          solid
        </Text>
      </View>
    </View>
  </View>
</View>
`;
