// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Component should match snapshot 1`] = `
<View
  testID="wrapper"
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderBottomColor": "#f2f2f2",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 10,
        "paddingVertical": 10,
      }
    }
  >
    <Image
      source={
        {
          "uri": "https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_1280.jpg",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": undefined,
            "width": undefined,
          },
          undefined,
        ]
      }
      testID="headerContainer"
    />
    <RNCSafeAreaView
      edges={
        [
          "left",
          "top",
          "right",
        ]
      }
      style={
        {
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "flex-start",
            "flex": 1,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "flex": 3,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "flex-end",
            "flex": 1,
          }
        }
      />
    </RNCSafeAreaView>
  </View>
</View>
`;

exports[`Header Component should render center component by passing a config through props 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderBottomColor": "#f2f2f2",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 10,
        "paddingVertical": 10,
      }
    }
    testID="headerContainer"
  >
    <RNCSafeAreaView
      edges={
        [
          "left",
          "top",
          "right",
        ]
      }
      style={
        {
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "flex-start",
            "flex": 1,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "flex": 3,
          }
        }
      >
        <Text
          numberOfLines={1}
          text="This is a title"
        >
          This is a title
        </Text>
      </View>
      <View
        style={
          {
            "alignItems": "flex-end",
            "flex": 1,
          }
        }
      />
    </RNCSafeAreaView>
  </View>
</View>
`;

exports[`Header Component should render left component by passing a component through props 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderBottomColor": "#f2f2f2",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 10,
        "paddingVertical": 10,
      }
    }
    testID="headerContainer"
  >
    <RNCSafeAreaView
      edges={
        [
          "left",
          "top",
          "right",
        ]
      }
      style={
        {
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "flex-start",
            "flex": 1,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              [
                {},
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Test button
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 3,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "flex-end",
            "flex": 1,
          }
        }
      />
    </RNCSafeAreaView>
  </View>
</View>
`;

exports[`Header Component should render left component by passing a config through props 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderBottomColor": "#f2f2f2",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 10,
        "paddingVertical": 10,
      }
    }
    testID="headerContainer"
  >
    <RNCSafeAreaView
      edges={
        [
          "left",
          "top",
          "right",
        ]
      }
      style={
        {
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "flex-start",
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "flex-start",
              "overflow": "hidden",
            }
          }
          testID="RNE__ICON__CONTAINER"
        >
          <View
            accessibilityRole="button"
            android_ripple={
              {
                "borderless": false,
                "color": "rgba(0, 0, 0, 0.3)",
                "radius": -5,
              }
            }
            disabled={false}
            icon="home"
            testID="RNE__ICON__CONTAINER_ACTION"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                }
              }
              testID="RNE__ICON"
            >
              <Text
                allowFontScaling={false}
                style={
                  [
                    {
                      "color": "#242424",
                      "fontSize": 24,
                    },
                    {
                      "backgroundColor": "transparent",
                    },
                    {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
                testID="RNE__ICON__Component"
              >
                î¢Š
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 3,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "flex-end",
            "flex": 1,
          }
        }
      />
    </RNCSafeAreaView>
  </View>
</View>
`;

exports[`Header Component should render right component by passing a config through props 1`] = `
<View
  testID="wrapper"
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderBottomColor": "#f2f2f2",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 10,
        "paddingVertical": 10,
      }
    }
    testID="headerContainer"
  >
    <RNCSafeAreaView
      edges={
        [
          "left",
          "top",
          "right",
        ]
      }
      style={
        {
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "flex-start",
            "flex": 1,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "flex": 3,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "flex-end",
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "flex-end",
              "overflow": "hidden",
            }
          }
          testID="RNE__ICON__CONTAINER"
        >
          <View
            accessibilityRole="button"
            android_ripple={
              {
                "borderless": false,
                "color": "rgba(0, 0, 0, 0.3)",
                "radius": -5,
              }
            }
            disabled={false}
            icon="home"
            testID="RNE__ICON__CONTAINER_ACTION"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                }
              }
              testID="RNE__ICON"
            >
              <Text
                allowFontScaling={false}
                style={
                  [
                    {
                      "color": "#242424",
                      "fontSize": 24,
                    },
                    {
                      "backgroundColor": "transparent",
                    },
                    {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
                testID="RNE__ICON__Component"
              >
                î¢Š
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RNCSafeAreaView>
  </View>
</View>
`;
